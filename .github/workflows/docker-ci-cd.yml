name: CI/CD Docker

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Nginx
      - name: Build and push Nginx
        uses: docker/build-push-action@v2
        with:
          context: ./nginx
          push: true
          tags: osdoonhyun/sel-q:nginx-latest

      # Client
      - name: Build and push Client
        uses: docker/build-push-action@v2
        with:
          context: ./selq-client
          push: true
          tags: osdoonhyun/sel-q:client-latest

      # Server
      - name: Build and push Server
        uses: docker/build-push-action@v2
        with:
          context: ./selq-server
          push: true
          tags: osdoonhyun/sel-q:server-latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: ssh connect & production
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD}}
          port: ${{ secrets.EC2_SSH_PORT }}
          script: | # 이미지 최신화, 서비스 업데이트
            cd Sel-Q
            docker compose down
            docker system prune -a --volumes -f
            docker compose pull -q
            docker compose up --force-recreate --build -d --quiet-pull 2>log.out
            cat log.out
